/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.NetworkAdminRole;

import Business.Browse;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.LayeredBarChart;
import Business.Network.Network;
import Business.Organization.NetworkAdminOrganization;
import Business.Organization.Organization;
import Business.PieChart;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WaterLvlWorkRequest;
import Business.WorkQueue.WaterShortageWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
//import javafx.scene.chart.PieChart;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.ui.RefineryUtilities;
import userinterface.LabourRole.LabourProcessWorkRequestJPanel;

/**
 *
 * @author Mayur
 */
public class ManageRequestWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageRequestWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Network network;
    private EcoSystem business;
    private NetworkAdminOrganization organization;
    public ManageRequestWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, Network network, EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.network = network;
        this.organization = (NetworkAdminOrganization) organization;
        this.business = business;
        
        networkjLabel.setText(network.getName());
        lblnwAdmin.setText(userAccount.getEmployee().getName());
       // processJButton.setEnabled(false);
        populateEnterprise();
       // populateTable();
    }
    public void populateEnterprise(){
         enterprisejComboBox1.removeAllItems();
        for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
           enterprisejComboBox1.addItem(enterprise);
            
        }
    }
     public void populateTable(){
         waterAvailjLabel.setText(String.valueOf(network.getWaterAvail()));
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        
        model.setRowCount(0);
        Enterprise enr = (Enterprise)enterprisejComboBox1.getSelectedItem();
        if(enr != null){
          for(Organization org : enr.getOrganizationDirectory().getOrganizationList())
              if(org instanceof NetworkAdminOrganization){
        //for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
           // for(Organization org : enterprise.getOrganizationDirectory().getOrganizationList()){
              //  if(org instanceof NetworkAdminOrganization )
        for(WorkRequest request : org.getWorkQueue().getWorkRequestList()){
          
            Object[] row = new Object[5];
            row[0] = request;
            //row[] = request.getSender().
            row[1] = ((WaterShortageWorkRequest)request).getWaterShortage();
            row[2] = request.getSender().getEmployee().getName();
            row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getStatus();
            
            model.addRow(row);
        }
       }
     }
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        networkjLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        waterAvailjLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        enterprisejComboBox1 = new javax.swing.JComboBox();
        btnwaterChart = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblnwAdmin = new javax.swing.JLabel();
        btnTodaysTemp = new javax.swing.JButton();
        backJButton1 = new javax.swing.JButton();

        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });

        processJButton.setText("Process");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Message", "Water Quantity", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        jLabel1.setText("Network:");

        networkjLabel.setText("jLabel2");

        jLabel3.setText("Water Available:");

        waterAvailjLabel.setText("jLabel4");

        jLabel2.setText("Enterprise:");

        enterprisejComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterprisejComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterprisejComboBox1ActionPerformed(evt);
            }
        });

        btnwaterChart.setText("WaterChart ");
        btnwaterChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnwaterChartActionPerformed(evt);
            }
        });

        jLabel4.setText("Network Admin:");

        lblnwAdmin.setText("jLabel5");

        btnTodaysTemp.setText("Today's Temperatute");
        btnTodaysTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTodaysTempActionPerformed(evt);
            }
        });

        backJButton1.setText("Back");
        backJButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(networkjLabel)
                        .addGap(147, 147, 147)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(waterAvailjLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblnwAdmin)
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(assignJButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(processJButton)))
                        .addGap(63, 63, 63))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enterprisejComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnTodaysTemp, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(refreshJButton)
                                .addGap(24, 24, 24)))
                        .addGap(82, 82, 82))))
            .addGroup(layout.createSequentialGroup()
                .addGap(292, 292, 292)
                .addComponent(btnwaterChart)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(networkjLabel)
                    .addComponent(jLabel3)
                    .addComponent(waterAvailjLabel)
                    .addComponent(jLabel4)
                    .addComponent(lblnwAdmin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(enterprisejComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnTodaysTemp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refreshJButton)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processJButton)
                    .addComponent(assignJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnwaterChart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(backJButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed
         boolean flagAssign = false;
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        boolean rcvEmpty = (request.getReceiver() == null);
       // boolean  rcvrMatches= request.getReceiver().getEmployee().toString().equals(userAccount.getEmployee().toString());
        boolean rqstStatus = request.getStatus().equalsIgnoreCase("Completed");
        
        if(rcvEmpty){
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        populateTable();
        
        processJButton.setEnabled(true);
        }else if(request.getReceiver().getEmployee().toString().equals(userAccount.getEmployee().toString()) && !rqstStatus){
             processJButton.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(null, "Select Proper Request");
        }
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }

        
        WaterShortageWorkRequest request = (WaterShortageWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
         Enterprise enterp = (Enterprise)enterprisejComboBox1.getSelectedItem();
          boolean rqstStatus = request.getStatus().equalsIgnoreCase("Completed");
          boolean rqstCStatus = request.getStatus().equalsIgnoreCase("Canceled");
          
        if(request.getReceiver() == null){
            JOptionPane.showMessageDialog(null, "Assign it first.");
        }else{
            if(request.getReceiver().getEmployee().toString().equals(userAccount.getEmployee().toString()) && !rqstStatus && !rqstCStatus){
                    if(request.getStatus().equalsIgnoreCase("Pending")){
                         request.setStatus("Processing");
                    }
                request.setStatus("Processing");

                NetworkAdminProcessWorkRequestJPanel networkAdminProcessWorkRequestJPanel = new NetworkAdminProcessWorkRequestJPanel(userProcessContainer,userAccount, request, network ,enterp);
                userProcessContainer.add("networkAdminProcessWorkRequestJPanel", networkAdminProcessWorkRequestJPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }else{
            JOptionPane.showMessageDialog(null, "Select Proper Request..");
            }
        }
    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void enterprisejComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterprisejComboBox1ActionPerformed

        populateTable();
    }//GEN-LAST:event_enterprisejComboBox1ActionPerformed

    private void btnwaterChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnwaterChartActionPerformed
/*
         PieChart demo = new PieChart("Pie Chart 3D Demo 2");
        demo.pack();
        RefineryUtilities.centerFrameOnScreen(demo);
        demo.setVisible(true);
        */
        final LayeredBarChart demo = new LayeredBarChart("Enterprise Water Measures", network);
        demo.pack();
        RefineryUtilities.centerFrameOnScreen(demo);
        demo.setVisible(true);

    }//GEN-LAST:event_btnwaterChartActionPerformed

    private void btnTodaysTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTodaysTempActionPerformed
        Browse.openURL("http://weather.weatherbug.com/forecasts/now/");
        //URI = URIUtil.encodeQuery("http://www.google.com?q=a b");
        //Browse.openWebpage("http://weather.weatherbug.com/forecasts/now/boston-ma-02111".toURI());
    }//GEN-LAST:event_btnTodaysTempActionPerformed

    private void backJButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton1ActionPerformed

         userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        NetworkAdminWorkAreaJPanel dwjp = (NetworkAdminWorkAreaJPanel) component;
        //dwjp.populateTable();
        
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton backJButton1;
    private javax.swing.JButton btnTodaysTemp;
    private javax.swing.JButton btnwaterChart;
    private javax.swing.JComboBox enterprisejComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblnwAdmin;
    private javax.swing.JLabel networkjLabel;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JLabel waterAvailjLabel;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
